{"version":3,"sources":["photo-resize.min.js","/source/photo-resize.min.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","factory","module","global","define","amd","mod","photoResize","this","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","PhotoResize","worker","USE_WORKER","file","width","height","callback","isUp","that","reader","FileReader","onload","resize","result","readAsDataURL","data","exifObj","piexif","load","ret","ImageIFD","ImageWidth","ImageLength","ExifIFD","PixelXDimension","PixelYDimension","ee","isSwapSide","temp","ori","getOrientation","photo","origw","origh","dstw","dsth","Resize","_loadExif","canvas","document","createElement","ctx","getContext","image","Image","crossOrigin","event","scale_w","scale_h","scale","scale_w_pixel","scale_h_pixel","drawImage","_JSImageResizer","getImageData","buffer","tempcanvas","tempcontext","_updateCanvas","createImageData","_setSize","toDataURL","src","beforeexif","exifStr","dump","insert","contextHandlePassed","imageBuffer","frameBuffer","x","putImageData","Orientation","output","ifd","tag","TAGS","startsWith","datas","split","window","atob"],"mappings":"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","file":"photo-resize.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports);\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports);\n        global.photoResize = mod.exports;\n    }\n})(this, function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    var _createClass = function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n\n    var PhotoResize = function () {\n        function PhotoResize(worker) {\n            _classCallCheck(this, PhotoResize);\n\n            // Workerを利用するかのフラグ\n            this.USE_WORKER = typeof worker === \"undefined\" ? true : worker;\n        }\n\n        /** 指定のファイルを読み込む\n         * @param File file 読み込むファイル。fileタグなどで指定されたもの\n         * @param function callback 読み込みが完了したら呼び出すコールバック関数。引数として、読み込んだデータのDataURIを返す\n        */\n\n\n        _createClass(PhotoResize, [{\n            key: 'loadAndResize',\n            value: function loadAndResize(file, width, height, callback, isUp) {\n                var that = this;\n                var reader = new FileReader();\n                reader.onload = function (e) {\n                    that.resize(e.target.result, width, height, callback, isUp);\n                };\n                reader.readAsDataURL(file);\n            }\n        }, {\n            key: '_loadExif',\n            value: function _loadExif(data) {\n                this.exifObj = piexif.load(data);\n                return this.exifObj;\n            }\n        }, {\n            key: 'getImageSize',\n            value: function getImageSize(exifObj) {\n                var ret = [0, 0];\n                exifObj = exifObj || this.exifObj;\n\n                try {\n                    ret[0] = exifObj['0th'][piexif.ImageIFD.ImageWidth];\n                    ret[1] = exifObj['0th'][piexif.ImageIFD.ImageLength];\n                } catch (e) {\n                    try {\n                        ret[0] = exifObj['Exif'][piexif.ExifIFD.PixelXDimension];\n                        ret[1] = exifObj['Exif'][piexif.ExifIFD.PixelYDimension];\n                    } catch (ee) {\n                        return false;\n                    }\n                }\n\n                // 反転チェック\n                if (this.isSwapSide(exifObj)) {\n                    var temp = ret[0];\n                    ret[0] = ret[1];\n                    ret[1] = temp;\n                }\n                return ret;\n            }\n        }, {\n            key: 'isSwapSide',\n            value: function isSwapSide(exifObj) {\n                var ori = this.getOrientation(exifObj);\n                return ori >= 5;\n            }\n        }, {\n            key: '_JSImageResizer',\n            value: function _JSImageResizer(photo, origw, origh, dstw, dsth, callback) {\n                var resize = new Resize(origw, origh, dstw, dsth, true, true, this.USE_WORKER, callback);\n                resize.resize(photo);\n            }\n        }, {\n            key: 'resize',\n            value: function resize(photo, width, height, callback, isUp) {\n                var that = this;\n                var temp;\n                this._loadExif(photo);\n\n                // フラグ設定\n                isUp = isUp || false;\n\n                // 画像の縦横が異なる時、拡大、縮小先のx,yを入れ替える\n                if (this.isSwapSide()) {\n                    temp = width;\n                    width = height;\n                    height = temp;\n                }\n\n                // 処理する\n                var canvas = document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n                var image = new Image();\n                image.crossOrigin = \"Anonymous\";\n                image.onload = function (event) {\n                    var scale_w = 1;\n                    var scale_h = 1;\n                    var scale = 1;\n                    var scale_w_pixel = width;\n                    var scale_h_pixel = height;\n\n                    // 拡大率を算出\n                    scale_w = width / this.width;\n                    scale_h = height / this.height;\n\n                    // 小さい方を拡大、縮小率として採用する\n                    if (scale_w <= scale_h) {\n                        scale = scale_w;\n                        scale_w_pixel = width;\n                        scale_h_pixel = this.height * scale;\n                    } else {\n                        scale = scale_h;\n                        scale_w_pixel = this.width * scale;\n                        scale_h_pixel = height;\n                    }\n\n                    // 拡大の場合で、isUpがfalseであれば何もしない\n                    if (!isUp && scale >= 1) {\n                        callback(photo);\n                        return;\n                    }\n\n                    canvas.width = this.width;\n                    canvas.height = this.height;\n                    ctx.drawImage(this, 0, 0);\n                    that._JSImageResizer(ctx.getImageData(0, 0, this.width, this.height).data, this.width, this.height, scale_w_pixel, scale_h_pixel, function (buffer) {\n                        var tempcanvas = document.createElement('canvas');\n                        tempcanvas.width = scale_w_pixel;\n                        tempcanvas.height = scale_h_pixel;\n                        var tempcontext = tempcanvas.getContext('2d');\n                        that._updateCanvas(tempcontext, tempcontext.createImageData(scale_w_pixel, scale_h_pixel), buffer);\n\n                        // exifを更新して返す\n                        callback(that._setSize(that.exifObj, tempcanvas.toDataURL('image/jpeg'), scale_w_pixel, scale_h_pixel));\n                    });\n                };\n                image.src = photo;\n            }\n        }, {\n            key: '_setSize',\n            value: function _setSize(beforeexif, data, width, height) {\n                beforeexif['0th'][piexif.ImageIFD.ImageWidth] = width;\n                beforeexif['0th'][piexif.ImageIFD.ImageLength] = height;\n                beforeexif['Exif'][piexif.ExifIFD.PixelXDimension] = width;\n                beforeexif['Exif'][piexif.ExifIFD.PixelYDimension] = height;\n                var exifStr = piexif.dump(beforeexif);\n                return piexif.insert(exifStr, data);\n            }\n        }, {\n            key: '_updateCanvas',\n            value: function _updateCanvas(contextHandlePassed, imageBuffer, frameBuffer) {\n                var data = imageBuffer.data;\n                var length = data.length;\n                for (var x = 0; x < length; ++x) {\n                    data[x] = frameBuffer[x] & 0xFF;\n                }\n                contextHandlePassed.putImageData(imageBuffer, 0, 0);\n            }\n        }, {\n            key: 'getOrientation',\n            value: function getOrientation(exifObj) {\n                exifObj = exifObj || this.exifObj;\n                return exifObj['0th'][piexif.ImageIFD.Orientation] || 1;\n            }\n        }, {\n            key: 'exifHTML',\n            value: function exifHTML(exifObj) {\n                exifObj = exifObj || this.exifObj;\n                var output = \"\";\n                for (var ifd in exifObj) {\n                    if (ifd == \"thumbnail\") {\n                        continue;\n                    }\n                    output += \"-\" + ifd + \"<br>\";\n                    for (var tag in exifObj[ifd]) {\n                        output += \"  \" + piexif.TAGS[ifd][tag][\"name\"] + \":\" + exifObj[ifd][tag] + \"<br>\";\n                    }\n                }\n\n                return output;\n            }\n        }], [{\n            key: 'convDataURL2Binary',\n            value: function convDataURL2Binary(data) {\n                if (!data.startsWith('data:image/')) {\n                    return false;\n                }\n\n                var datas = data.split(',');\n                return window.atob(datas[1]);\n            }\n        }]);\n\n        return PhotoResize;\n    }();\n\n    exports.default = PhotoResize;\n\n    if (typeof window != \"undefined\") {\n        !window.PhotoResize && (window.PhotoResize = PhotoResize);\n    }\n});\n\n},{}]},{},[1]);\n","(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['exports'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(exports);\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod.exports);\n        global.photoResize = mod.exports;\n    }\n})(this, function (exports) {\n    'use strict';\n\n    Object.defineProperty(exports, \"__esModule\", {\n        value: true\n    });\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    var _createClass = function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n\n    var PhotoResize = function () {\n        function PhotoResize(worker) {\n            _classCallCheck(this, PhotoResize);\n\n            // Workerを利用するかのフラグ\n            this.USE_WORKER = typeof worker === \"undefined\" ? true : worker;\n        }\n\n        /** 指定のファイルを読み込む\n         * @param File file 読み込むファイル。fileタグなどで指定されたもの\n         * @param function callback 読み込みが完了したら呼び出すコールバック関数。引数として、読み込んだデータのDataURIを返す\n        */\n\n\n        _createClass(PhotoResize, [{\n            key: 'loadAndResize',\n            value: function loadAndResize(file, width, height, callback, isUp) {\n                var that = this;\n                var reader = new FileReader();\n                reader.onload = function (e) {\n                    that.resize(e.target.result, width, height, callback, isUp);\n                };\n                reader.readAsDataURL(file);\n            }\n        }, {\n            key: '_loadExif',\n            value: function _loadExif(data) {\n                this.exifObj = piexif.load(data);\n                return this.exifObj;\n            }\n        }, {\n            key: 'getImageSize',\n            value: function getImageSize(exifObj) {\n                var ret = [0, 0];\n                exifObj = exifObj || this.exifObj;\n\n                try {\n                    ret[0] = exifObj['0th'][piexif.ImageIFD.ImageWidth];\n                    ret[1] = exifObj['0th'][piexif.ImageIFD.ImageLength];\n                } catch (e) {\n                    try {\n                        ret[0] = exifObj['Exif'][piexif.ExifIFD.PixelXDimension];\n                        ret[1] = exifObj['Exif'][piexif.ExifIFD.PixelYDimension];\n                    } catch (ee) {\n                        return false;\n                    }\n                }\n\n                // 反転チェック\n                if (this.isSwapSide(exifObj)) {\n                    var temp = ret[0];\n                    ret[0] = ret[1];\n                    ret[1] = temp;\n                }\n                return ret;\n            }\n        }, {\n            key: 'isSwapSide',\n            value: function isSwapSide(exifObj) {\n                var ori = this.getOrientation(exifObj);\n                return ori >= 5;\n            }\n        }, {\n            key: '_JSImageResizer',\n            value: function _JSImageResizer(photo, origw, origh, dstw, dsth, callback) {\n                console.log(\"worker=\" + this.USE_WORKER);\n\n                var resize = new Resize(origw, origh, dstw, dsth, true, true, this.USE_WORKER, callback);\n                resize.resize(photo);\n            }\n        }, {\n            key: 'resize',\n            value: function resize(photo, width, height, callback, isUp) {\n                var that = this;\n                var temp;\n                this._loadExif(photo);\n\n                // フラグ設定\n                isUp = isUp || false;\n\n                // 画像の縦横が異なる時、拡大、縮小先のx,yを入れ替える\n                if (this.isSwapSide()) {\n                    temp = width;\n                    width = height;\n                    height = temp;\n                }\n\n                // 処理する\n                var canvas = document.createElement('canvas');\n                var ctx = canvas.getContext('2d');\n                var image = new Image();\n                image.crossOrigin = \"Anonymous\";\n                image.onload = function (event) {\n                    var scale_w = 1;\n                    var scale_h = 1;\n                    var scale = 1;\n                    var scale_w_pixel = width;\n                    var scale_h_pixel = height;\n\n                    // 拡大率を算出\n                    scale_w = width / this.width;\n                    scale_h = height / this.height;\n\n                    // 小さい方を拡大、縮小率として採用する\n                    if (scale_w <= scale_h) {\n                        scale = scale_w;\n                        scale_w_pixel = width;\n                        scale_h_pixel = this.height * scale;\n                    } else {\n                        scale = scale_h;\n                        scale_w_pixel = this.width * scale;\n                        scale_h_pixel = height;\n                    }\n\n                    // 拡大の場合で、isUpがfalseであれば何もしない\n                    if (!isUp && scale >= 1) {\n                        callback(photo);\n                        return;\n                    }\n\n                    canvas.width = this.width;\n                    canvas.height = this.height;\n                    ctx.drawImage(this, 0, 0);\n                    that._JSImageResizer(ctx.getImageData(0, 0, this.width, this.height).data, this.width, this.height, scale_w_pixel, scale_h_pixel, function (buffer) {\n                        var tempcanvas = document.createElement('canvas');\n                        tempcanvas.width = scale_w_pixel;\n                        tempcanvas.height = scale_h_pixel;\n                        var tempcontext = tempcanvas.getContext('2d');\n                        that._updateCanvas(tempcontext, tempcontext.createImageData(scale_w_pixel, scale_h_pixel), buffer);\n\n                        // exifを更新して返す\n                        callback(that._setSize(that.exifObj, tempcanvas.toDataURL('image/jpeg'), scale_w_pixel, scale_h_pixel));\n                    });\n                };\n                image.src = photo;\n            }\n        }, {\n            key: '_setSize',\n            value: function _setSize(beforeexif, data, width, height) {\n                beforeexif['0th'][piexif.ImageIFD.ImageWidth] = width;\n                beforeexif['0th'][piexif.ImageIFD.ImageLength] = height;\n                beforeexif['Exif'][piexif.ExifIFD.PixelXDimension] = width;\n                beforeexif['Exif'][piexif.ExifIFD.PixelYDimension] = height;\n                var exifStr = piexif.dump(beforeexif);\n                return piexif.insert(exifStr, data);\n            }\n        }, {\n            key: '_updateCanvas',\n            value: function _updateCanvas(contextHandlePassed, imageBuffer, frameBuffer) {\n                var data = imageBuffer.data;\n                var length = data.length;\n                for (var x = 0; x < length; ++x) {\n                    data[x] = frameBuffer[x] & 0xFF;\n                }\n                contextHandlePassed.putImageData(imageBuffer, 0, 0);\n            }\n        }, {\n            key: 'getOrientation',\n            value: function getOrientation(exifObj) {\n                exifObj = exifObj || this.exifObj;\n                return exifObj['0th'][piexif.ImageIFD.Orientation] || 1;\n            }\n        }, {\n            key: 'exifHTML',\n            value: function exifHTML(exifObj) {\n                exifObj = exifObj || this.exifObj;\n                var output = \"\";\n                for (var ifd in exifObj) {\n                    if (ifd == \"thumbnail\") {\n                        continue;\n                    }\n                    output += \"-\" + ifd + \"<br>\";\n                    for (var tag in exifObj[ifd]) {\n                        output += \"  \" + piexif.TAGS[ifd][tag][\"name\"] + \":\" + exifObj[ifd][tag] + \"<br>\";\n                    }\n                }\n\n                return output;\n            }\n        }], [{\n            key: 'convDataURL2Binary',\n            value: function convDataURL2Binary(data) {\n                if (!data.startsWith('data:image/')) {\n                    return false;\n                }\n\n                var datas = data.split(',');\n                return window.atob(datas[1]);\n            }\n        }]);\n\n        return PhotoResize;\n    }();\n\n    exports.default = PhotoResize;\n\n    if (typeof window != \"undefined\") {\n        !window.PhotoResize && (window.PhotoResize = PhotoResize);\n    }\n});\n\n},{}]},{},[1]);\n"],"sourceRoot":"/source/"}